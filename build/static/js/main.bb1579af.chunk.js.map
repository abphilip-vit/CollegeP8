{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","components/Header.js","components/Column.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","locationIcon","LocationInfoBox","info","id","date","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Header","Column","list","App","setEventData","useEffect","a","fetch","res","json","events","fetchEvents","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAYeA,EARQ,SAAC,GAAwB,EAAvBC,IAAuB,EAAlBC,IAAmB,IAAdC,EAAa,EAAbA,QAC/B,OACI,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACI,cAAC,OAAD,CAAME,KAAMC,IAAcF,UAAU,qBCOjCG,EAZS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACtB,OACI,sBAAKJ,UAAU,gBAAf,UACI,qDACA,+BACI,sCAAQ,iCAAUI,EAAKC,QACvB,wCAAU,uCAAUD,EAAKE,KAAf,iBCHpBC,EAAM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAAU,EAECC,mBAAS,MAFV,mBAEhCC,EAFgC,KAElBC,EAFkB,KAIjCC,EAAUN,EAAUO,KAAK,SAAAC,GAC3B,GAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,GAChB,OAAO,cAAC,EAAD,CAAgBR,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GAAIrB,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAAIpB,QAAS,kBAAMc,EAAgB,CAACR,GAAIW,EAAGX,GAAIC,KAAMU,EAAGE,WAAW,GAAGZ,aAI7K,OACI,sBAAKN,UAAU,MAAf,UACI,cAAC,IAAD,CACIoB,iBAAkB,CAAEC,IAAK,2CACzBC,cAAeb,EACfc,YAAgBb,EAHpB,SAKKI,IAEAF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAKxDL,EAAIiB,aAAe,CACff,OAAQ,CACJZ,IAAK,QACLC,IAAK,SAETY,KAAM,IAGKH,QC1BAkB,EARA,WACX,OACI,wBAAQzB,UAAU,SAAlB,SACI,+BAAI,cAAC,OAAD,CAAMC,KAAMC,MAAhB,wBCWGwB,EAjBA,SAAC,GAAmB,IACzBC,EADwB,EAAhBnB,UACSO,KAAK,SAAAC,GACxB,GAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,GAChB,OAAO,8BACP,+BACI,sCAAQ,iCAAUW,EAAGX,QACrB,wCAAU,uCAAUW,EAAGE,WAAW,GAAGZ,KAA3B,kBAMtB,OAAO,qBAAKN,UAAU,cAAf,SACF2B,KCeMC,MAvBf,WAAgB,IAAD,EAEqBjB,mBAAS,IAF9B,mBAENH,EAFM,KAEKqB,EAFL,KAcb,OAVAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,sEACAC,MAAM,mDADN,cACZC,EADY,gBAEOA,EAAIC,OAFX,gBAEVC,EAFU,EAEVA,OACRN,EAAaM,GAHK,2CAAH,qDAKjBC,GACAC,QAAQC,IAAI9B,KACX,IAGD,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAKQ,UAAWA,IAChB,cAAC,EAAD,CAAQA,UAAWA,QCXV+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb1579af.chunk.js","sourcesContent":["import React from 'react';\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/account';\n\nconst LocationMarker = ({lat, lng, onClick}) => {\n    return(\n        <div className=\"location-marker\" onClick={onClick}>\n            <Icon icon={locationIcon} className=\"location-icon\"/>\n        </div>\n    );\n}\n\nexport default LocationMarker;","import React from 'react';\n\nconst LocationInfoBox = ({info}) => {\n    return (\n        <div className=\"location-info\">\n            <h2>Event Location Info</h2>\n            <ul>\n                <li>ID: <strong>{ info.id }</strong></li>\n                <li>Date: <strong> {info.date} </strong></li>\n            </ul>\n        </div>\n    );\n}\n\nexport default LocationInfoBox;","import {useState} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport LocationMarker from './LocationMarker';\nimport LocationInfoBox from './LocationInfoBox';\n\nconst Map = ({eventData, center, zoom}) => {\n    \n    const [locationInfo, setLocationInfo] = useState(null)\n\n    const markers = eventData.map( ev => {\n        if(ev.categories[0].id === 8){\n            return <LocationMarker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} onClick={() => setLocationInfo({id: ev.id, date: ev.geometries[0].date})}/>\n        }\n    })\n    \n    return (\n        <div className=\"map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyBK7c8ivOAJnCeD17KWd_g1v-zsw7nGx5c\"}}\n                defaultCenter={center}\n                defaultZoom = { zoom }\n            >\n                {markers}\n                </GoogleMapReact>\n                {locationInfo && <LocationInfoBox info={locationInfo}/>}\n        </div>\n    );\n}\n\nMap.defaultProps = {\n    center: {\n        lat: 13.0827,\n        lng: 80.2707\n    },\n    zoom: 15\n}\n\nexport default Map;\n","import { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/account'\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <h1><Icon icon={locationIcon}/> Person Tracker</h1>\n        </header>\n    );\n}\n\nexport default Header;","const Column = ({ eventData }) => {\n    const list = eventData.map( ev => {\n        if(ev.categories[0].id === 8){\n            return <div>\n            <ul>\n                <li>ID: <strong>{ ev.id }</strong></li>\n                <li>Date: <strong> {ev.geometries[0].date} </strong></li>\n            </ul>\n            </div>\n        }\n    })\n\n    return <div className=\"column-data\">\n        {list}\n    </div>\n}\n\nexport default Column;","import Map from './components/Map.js';\nimport {useState, useEffect} from 'react';\nimport Header from './components/Header'\nimport Column from './components/Column'\n\nfunction App() {\n\n  const [eventData, setEventData] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const { events } = await res.json()\n      setEventData(events)\n    }\n    fetchEvents()\n    console.log(eventData);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Map eventData={eventData}/>\n      <Column eventData={eventData}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}